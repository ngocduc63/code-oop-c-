#include <bits\stdc++.h>

using namespace std;


class dv{
	public :
		virtual void move(){
			cout<< "move cua dv"<< endl;
		}
		virtual void speak(){
			cout<< "speak cua dv"<< endl;
		}
};

class ran : public dv{
	public:
		void move(){
			cout<<"move cua ran"<< endl;
		}
		void speak(){
			cout<< "speak cua ran"<< endl;
		}
};
class ga : public dv{
	public:
		void move(){
			cout<< "move cua ga"<< endl;
		}
		void speak(){
			cout<< "speak cua ga"<< endl;
		}
};
class cho : public dv{
	public:
		void move(){
			cout<< "move cua cho"<< endl;
		}
		void speak(){
			cout<< "speak cua cho"<< endl;
		}
};
class meo : public dv{
	public:
		void move(){
			cout<< "move cua meo"<< endl;
		}
		void speak(){
			cout<< "speak cua meo"<< endl;
		}
};

void kill(dv &dv){
	//logic kill
	dv.speak();
} 
int main(){
//	dv *dv;
//	ran r;
//	dv = &r;
//	dv->move();


	dv **dsDV;
	dsDV = new dv*[4]; 
	
	ran r;
	cho c;
	ga g;
	meo m;
	
	dsDV[0] = &r;
	dsDV[1] = &c;
	dsDV[2] = &g;
	dsDV[3] = &m;
	
	bool trungDan = true;
	for(int i=0; i<4; i++){
		dsDV[i]->move();
		if(trungDan) kill(*dsDV[i]);
	}
	
	return 0;
} 
